# Single backend to handle all streaming requests,
# obviating the need to share open connections (of class
# Sinatra::Helpers::Stream) among multiple instances

upstream fakebook_stream {
  server 127.0.0.1:3000;
}

# Multiple backends to handle non-streaming requests
upstream fakebook {
  server 127.0.0.1:3000;
  server 127.0.0.1:3001;
}

server {
  listen 0.0.0.0:80;
  root   /path/to/fakebook/app/public;
  index  index.html;

  # Static stuff
  location ~ ^/assets/ {
    expires    max;
    add_header Cache-Control public;
    add_header ETag "";
    break;
  }

  # Route all streaming requests to single backend server
  location ^~ /pubsub {
    proxy_set_header X-Real-IP       $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host            $http_host;
    proxy_redirect   off;
    proxy_buffering  off;
    proxy_pass       http://fakebook_stream;
  }

  location / {
    try_files $uri/index.html $uri.html $uri @fakebook;
  }

  # Route non-streaming requests to multiple backend servers
  location @fakebook {
    proxy_set_header X-Real-IP       $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host            $http_host;
    proxy_redirect   off;
    proxy_pass       http://fakebook;
  }

  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /path/to/fakebook/app/public;
  }
}
